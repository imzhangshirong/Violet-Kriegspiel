// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Push.proto

package com.violet.rpc;

public final class Push {
  private Push() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RoomStateChangePushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.violet.rpc.RoomStateChangePush)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    java.util.List<com.violet.rpc.Struct.PlayerInfo> 
        getPlayerListList();
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    com.violet.rpc.Struct.PlayerInfo getPlayerList(int index);
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    int getPlayerListCount();
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    java.util.List<? extends com.violet.rpc.Struct.PlayerInfoOrBuilder> 
        getPlayerListOrBuilderList();
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerListOrBuilder(
        int index);
  }
  /**
   * <pre>
   *房间状态发生变化，对方退出
   * </pre>
   *
   * Protobuf type {@code com.violet.rpc.RoomStateChangePush}
   */
  public  static final class RoomStateChangePush extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.violet.rpc.RoomStateChangePush)
      RoomStateChangePushOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RoomStateChangePush.newBuilder() to construct.
    private RoomStateChangePush(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RoomStateChangePush() {
      playerList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RoomStateChangePush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerList_ = new java.util.ArrayList<com.violet.rpc.Struct.PlayerInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerList_.add(
                  input.readMessage(com.violet.rpc.Struct.PlayerInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerList_ = java.util.Collections.unmodifiableList(playerList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_RoomStateChangePush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_RoomStateChangePush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.violet.rpc.Push.RoomStateChangePush.class, com.violet.rpc.Push.RoomStateChangePush.Builder.class);
    }

    public static final int PLAYERLIST_FIELD_NUMBER = 1;
    private java.util.List<com.violet.rpc.Struct.PlayerInfo> playerList_;
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public java.util.List<com.violet.rpc.Struct.PlayerInfo> getPlayerListList() {
      return playerList_;
    }
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public java.util.List<? extends com.violet.rpc.Struct.PlayerInfoOrBuilder> 
        getPlayerListOrBuilderList() {
      return playerList_;
    }
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public int getPlayerListCount() {
      return playerList_.size();
    }
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public com.violet.rpc.Struct.PlayerInfo getPlayerList(int index) {
      return playerList_.get(index);
    }
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerListOrBuilder(
        int index) {
      return playerList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < playerList_.size(); i++) {
        output.writeMessage(1, playerList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.violet.rpc.Push.RoomStateChangePush)) {
        return super.equals(obj);
      }
      com.violet.rpc.Push.RoomStateChangePush other = (com.violet.rpc.Push.RoomStateChangePush) obj;

      boolean result = true;
      result = result && getPlayerListList()
          .equals(other.getPlayerListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPlayerListCount() > 0) {
        hash = (37 * hash) + PLAYERLIST_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.RoomStateChangePush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.violet.rpc.Push.RoomStateChangePush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *房间状态发生变化，对方退出
     * </pre>
     *
     * Protobuf type {@code com.violet.rpc.RoomStateChangePush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.violet.rpc.RoomStateChangePush)
        com.violet.rpc.Push.RoomStateChangePushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_RoomStateChangePush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_RoomStateChangePush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.violet.rpc.Push.RoomStateChangePush.class, com.violet.rpc.Push.RoomStateChangePush.Builder.class);
      }

      // Construct using com.violet.rpc.Push.RoomStateChangePush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayerListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (playerListBuilder_ == null) {
          playerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_RoomStateChangePush_descriptor;
      }

      public com.violet.rpc.Push.RoomStateChangePush getDefaultInstanceForType() {
        return com.violet.rpc.Push.RoomStateChangePush.getDefaultInstance();
      }

      public com.violet.rpc.Push.RoomStateChangePush build() {
        com.violet.rpc.Push.RoomStateChangePush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.violet.rpc.Push.RoomStateChangePush buildPartial() {
        com.violet.rpc.Push.RoomStateChangePush result = new com.violet.rpc.Push.RoomStateChangePush(this);
        int from_bitField0_ = bitField0_;
        if (playerListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerList_ = java.util.Collections.unmodifiableList(playerList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerList_ = playerList_;
        } else {
          result.playerList_ = playerListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.violet.rpc.Push.RoomStateChangePush) {
          return mergeFrom((com.violet.rpc.Push.RoomStateChangePush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.violet.rpc.Push.RoomStateChangePush other) {
        if (other == com.violet.rpc.Push.RoomStateChangePush.getDefaultInstance()) return this;
        if (playerListBuilder_ == null) {
          if (!other.playerList_.isEmpty()) {
            if (playerList_.isEmpty()) {
              playerList_ = other.playerList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerListIsMutable();
              playerList_.addAll(other.playerList_);
            }
            onChanged();
          }
        } else {
          if (!other.playerList_.isEmpty()) {
            if (playerListBuilder_.isEmpty()) {
              playerListBuilder_.dispose();
              playerListBuilder_ = null;
              playerList_ = other.playerList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerListFieldBuilder() : null;
            } else {
              playerListBuilder_.addAllMessages(other.playerList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.violet.rpc.Push.RoomStateChangePush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.violet.rpc.Push.RoomStateChangePush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.violet.rpc.Struct.PlayerInfo> playerList_ =
        java.util.Collections.emptyList();
      private void ensurePlayerListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerList_ = new java.util.ArrayList<com.violet.rpc.Struct.PlayerInfo>(playerList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder> playerListBuilder_;

      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public java.util.List<com.violet.rpc.Struct.PlayerInfo> getPlayerListList() {
        if (playerListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerList_);
        } else {
          return playerListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public int getPlayerListCount() {
        if (playerListBuilder_ == null) {
          return playerList_.size();
        } else {
          return playerListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo getPlayerList(int index) {
        if (playerListBuilder_ == null) {
          return playerList_.get(index);
        } else {
          return playerListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder setPlayerList(
          int index, com.violet.rpc.Struct.PlayerInfo value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.set(index, value);
          onChanged();
        } else {
          playerListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder setPlayerList(
          int index, com.violet.rpc.Struct.PlayerInfo.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(com.violet.rpc.Struct.PlayerInfo value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.add(value);
          onChanged();
        } else {
          playerListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          int index, com.violet.rpc.Struct.PlayerInfo value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.add(index, value);
          onChanged();
        } else {
          playerListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          com.violet.rpc.Struct.PlayerInfo.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.add(builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          int index, com.violet.rpc.Struct.PlayerInfo.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addAllPlayerList(
          java.lang.Iterable<? extends com.violet.rpc.Struct.PlayerInfo> values) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerList_);
          onChanged();
        } else {
          playerListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder clearPlayerList() {
        if (playerListBuilder_ == null) {
          playerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder removePlayerList(int index) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.remove(index);
          onChanged();
        } else {
          playerListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo.Builder getPlayerListBuilder(
          int index) {
        return getPlayerListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerListOrBuilder(
          int index) {
        if (playerListBuilder_ == null) {
          return playerList_.get(index);  } else {
          return playerListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public java.util.List<? extends com.violet.rpc.Struct.PlayerInfoOrBuilder> 
           getPlayerListOrBuilderList() {
        if (playerListBuilder_ != null) {
          return playerListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerList_);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo.Builder addPlayerListBuilder() {
        return getPlayerListFieldBuilder().addBuilder(
            com.violet.rpc.Struct.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo.Builder addPlayerListBuilder(
          int index) {
        return getPlayerListFieldBuilder().addBuilder(
            index, com.violet.rpc.Struct.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public java.util.List<com.violet.rpc.Struct.PlayerInfo.Builder> 
           getPlayerListBuilderList() {
        return getPlayerListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder> 
          getPlayerListFieldBuilder() {
        if (playerListBuilder_ == null) {
          playerListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder>(
                  playerList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerList_ = null;
        }
        return playerListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.violet.rpc.RoomStateChangePush)
    }

    // @@protoc_insertion_point(class_scope:com.violet.rpc.RoomStateChangePush)
    private static final com.violet.rpc.Push.RoomStateChangePush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.violet.rpc.Push.RoomStateChangePush();
    }

    public static com.violet.rpc.Push.RoomStateChangePush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoomStateChangePush>
        PARSER = new com.google.protobuf.AbstractParser<RoomStateChangePush>() {
      public RoomStateChangePush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RoomStateChangePush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RoomStateChangePush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoomStateChangePush> getParserForType() {
      return PARSER;
    }

    public com.violet.rpc.Push.RoomStateChangePush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EnterBattleFieldPushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.violet.rpc.EnterBattleFieldPush)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    java.util.List<com.violet.rpc.Struct.PlayerInfo> 
        getPlayerListList();
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    com.violet.rpc.Struct.PlayerInfo getPlayerList(int index);
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    int getPlayerListCount();
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    java.util.List<? extends com.violet.rpc.Struct.PlayerInfoOrBuilder> 
        getPlayerListOrBuilderList();
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerListOrBuilder(
        int index);

    /**
     * <pre>
     *回合顺序位置，从0开始，0先手
     * </pre>
     *
     * <code>int32 roundOrder = 2;</code>
     */
    int getRoundOrder();

    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    java.util.List<com.violet.rpc.Struct.ChessData> 
        getChessSettingList();
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    com.violet.rpc.Struct.ChessData getChessSetting(int index);
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    int getChessSettingCount();
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    java.util.List<? extends com.violet.rpc.Struct.ChessDataOrBuilder> 
        getChessSettingOrBuilderList();
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    com.violet.rpc.Struct.ChessDataOrBuilder getChessSettingOrBuilder(
        int index);

    /**
     * <code>string roomId = 4;</code>
     */
    java.lang.String getRoomId();
    /**
     * <code>string roomId = 4;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();
  }
  /**
   * Protobuf type {@code com.violet.rpc.EnterBattleFieldPush}
   */
  public  static final class EnterBattleFieldPush extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.violet.rpc.EnterBattleFieldPush)
      EnterBattleFieldPushOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EnterBattleFieldPush.newBuilder() to construct.
    private EnterBattleFieldPush(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EnterBattleFieldPush() {
      playerList_ = java.util.Collections.emptyList();
      roundOrder_ = 0;
      chessSetting_ = java.util.Collections.emptyList();
      roomId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EnterBattleFieldPush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerList_ = new java.util.ArrayList<com.violet.rpc.Struct.PlayerInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerList_.add(
                  input.readMessage(com.violet.rpc.Struct.PlayerInfo.parser(), extensionRegistry));
              break;
            }
            case 16: {

              roundOrder_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                chessSetting_ = new java.util.ArrayList<com.violet.rpc.Struct.ChessData>();
                mutable_bitField0_ |= 0x00000004;
              }
              chessSetting_.add(
                  input.readMessage(com.violet.rpc.Struct.ChessData.parser(), extensionRegistry));
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              roomId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerList_ = java.util.Collections.unmodifiableList(playerList_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          chessSetting_ = java.util.Collections.unmodifiableList(chessSetting_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_EnterBattleFieldPush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_EnterBattleFieldPush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.violet.rpc.Push.EnterBattleFieldPush.class, com.violet.rpc.Push.EnterBattleFieldPush.Builder.class);
    }

    private int bitField0_;
    public static final int PLAYERLIST_FIELD_NUMBER = 1;
    private java.util.List<com.violet.rpc.Struct.PlayerInfo> playerList_;
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public java.util.List<com.violet.rpc.Struct.PlayerInfo> getPlayerListList() {
      return playerList_;
    }
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public java.util.List<? extends com.violet.rpc.Struct.PlayerInfoOrBuilder> 
        getPlayerListOrBuilderList() {
      return playerList_;
    }
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public int getPlayerListCount() {
      return playerList_.size();
    }
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public com.violet.rpc.Struct.PlayerInfo getPlayerList(int index) {
      return playerList_.get(index);
    }
    /**
     * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
     */
    public com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerListOrBuilder(
        int index) {
      return playerList_.get(index);
    }

    public static final int ROUNDORDER_FIELD_NUMBER = 2;
    private int roundOrder_;
    /**
     * <pre>
     *回合顺序位置，从0开始，0先手
     * </pre>
     *
     * <code>int32 roundOrder = 2;</code>
     */
    public int getRoundOrder() {
      return roundOrder_;
    }

    public static final int CHESSSETTING_FIELD_NUMBER = 3;
    private java.util.List<com.violet.rpc.Struct.ChessData> chessSetting_;
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    public java.util.List<com.violet.rpc.Struct.ChessData> getChessSettingList() {
      return chessSetting_;
    }
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    public java.util.List<? extends com.violet.rpc.Struct.ChessDataOrBuilder> 
        getChessSettingOrBuilderList() {
      return chessSetting_;
    }
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    public int getChessSettingCount() {
      return chessSetting_.size();
    }
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    public com.violet.rpc.Struct.ChessData getChessSetting(int index) {
      return chessSetting_.get(index);
    }
    /**
     * <pre>
     *我方上次的摆子设置
     * </pre>
     *
     * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
     */
    public com.violet.rpc.Struct.ChessDataOrBuilder getChessSettingOrBuilder(
        int index) {
      return chessSetting_.get(index);
    }

    public static final int ROOMID_FIELD_NUMBER = 4;
    private volatile java.lang.Object roomId_;
    /**
     * <code>string roomId = 4;</code>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomId_ = s;
        return s;
      }
    }
    /**
     * <code>string roomId = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < playerList_.size(); i++) {
        output.writeMessage(1, playerList_.get(i));
      }
      if (roundOrder_ != 0) {
        output.writeInt32(2, roundOrder_);
      }
      for (int i = 0; i < chessSetting_.size(); i++) {
        output.writeMessage(3, chessSetting_.get(i));
      }
      if (!getRoomIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, roomId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerList_.get(i));
      }
      if (roundOrder_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, roundOrder_);
      }
      for (int i = 0; i < chessSetting_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, chessSetting_.get(i));
      }
      if (!getRoomIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, roomId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.violet.rpc.Push.EnterBattleFieldPush)) {
        return super.equals(obj);
      }
      com.violet.rpc.Push.EnterBattleFieldPush other = (com.violet.rpc.Push.EnterBattleFieldPush) obj;

      boolean result = true;
      result = result && getPlayerListList()
          .equals(other.getPlayerListList());
      result = result && (getRoundOrder()
          == other.getRoundOrder());
      result = result && getChessSettingList()
          .equals(other.getChessSettingList());
      result = result && getRoomId()
          .equals(other.getRoomId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPlayerListCount() > 0) {
        hash = (37 * hash) + PLAYERLIST_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerListList().hashCode();
      }
      hash = (37 * hash) + ROUNDORDER_FIELD_NUMBER;
      hash = (53 * hash) + getRoundOrder();
      if (getChessSettingCount() > 0) {
        hash = (37 * hash) + CHESSSETTING_FIELD_NUMBER;
        hash = (53 * hash) + getChessSettingList().hashCode();
      }
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.EnterBattleFieldPush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.violet.rpc.Push.EnterBattleFieldPush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.violet.rpc.EnterBattleFieldPush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.violet.rpc.EnterBattleFieldPush)
        com.violet.rpc.Push.EnterBattleFieldPushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_EnterBattleFieldPush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_EnterBattleFieldPush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.violet.rpc.Push.EnterBattleFieldPush.class, com.violet.rpc.Push.EnterBattleFieldPush.Builder.class);
      }

      // Construct using com.violet.rpc.Push.EnterBattleFieldPush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayerListFieldBuilder();
          getChessSettingFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (playerListBuilder_ == null) {
          playerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerListBuilder_.clear();
        }
        roundOrder_ = 0;

        if (chessSettingBuilder_ == null) {
          chessSetting_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          chessSettingBuilder_.clear();
        }
        roomId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_EnterBattleFieldPush_descriptor;
      }

      public com.violet.rpc.Push.EnterBattleFieldPush getDefaultInstanceForType() {
        return com.violet.rpc.Push.EnterBattleFieldPush.getDefaultInstance();
      }

      public com.violet.rpc.Push.EnterBattleFieldPush build() {
        com.violet.rpc.Push.EnterBattleFieldPush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.violet.rpc.Push.EnterBattleFieldPush buildPartial() {
        com.violet.rpc.Push.EnterBattleFieldPush result = new com.violet.rpc.Push.EnterBattleFieldPush(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (playerListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerList_ = java.util.Collections.unmodifiableList(playerList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerList_ = playerList_;
        } else {
          result.playerList_ = playerListBuilder_.build();
        }
        result.roundOrder_ = roundOrder_;
        if (chessSettingBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            chessSetting_ = java.util.Collections.unmodifiableList(chessSetting_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.chessSetting_ = chessSetting_;
        } else {
          result.chessSetting_ = chessSettingBuilder_.build();
        }
        result.roomId_ = roomId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.violet.rpc.Push.EnterBattleFieldPush) {
          return mergeFrom((com.violet.rpc.Push.EnterBattleFieldPush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.violet.rpc.Push.EnterBattleFieldPush other) {
        if (other == com.violet.rpc.Push.EnterBattleFieldPush.getDefaultInstance()) return this;
        if (playerListBuilder_ == null) {
          if (!other.playerList_.isEmpty()) {
            if (playerList_.isEmpty()) {
              playerList_ = other.playerList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerListIsMutable();
              playerList_.addAll(other.playerList_);
            }
            onChanged();
          }
        } else {
          if (!other.playerList_.isEmpty()) {
            if (playerListBuilder_.isEmpty()) {
              playerListBuilder_.dispose();
              playerListBuilder_ = null;
              playerList_ = other.playerList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerListFieldBuilder() : null;
            } else {
              playerListBuilder_.addAllMessages(other.playerList_);
            }
          }
        }
        if (other.getRoundOrder() != 0) {
          setRoundOrder(other.getRoundOrder());
        }
        if (chessSettingBuilder_ == null) {
          if (!other.chessSetting_.isEmpty()) {
            if (chessSetting_.isEmpty()) {
              chessSetting_ = other.chessSetting_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChessSettingIsMutable();
              chessSetting_.addAll(other.chessSetting_);
            }
            onChanged();
          }
        } else {
          if (!other.chessSetting_.isEmpty()) {
            if (chessSettingBuilder_.isEmpty()) {
              chessSettingBuilder_.dispose();
              chessSettingBuilder_ = null;
              chessSetting_ = other.chessSetting_;
              bitField0_ = (bitField0_ & ~0x00000004);
              chessSettingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChessSettingFieldBuilder() : null;
            } else {
              chessSettingBuilder_.addAllMessages(other.chessSetting_);
            }
          }
        }
        if (!other.getRoomId().isEmpty()) {
          roomId_ = other.roomId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.violet.rpc.Push.EnterBattleFieldPush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.violet.rpc.Push.EnterBattleFieldPush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.violet.rpc.Struct.PlayerInfo> playerList_ =
        java.util.Collections.emptyList();
      private void ensurePlayerListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerList_ = new java.util.ArrayList<com.violet.rpc.Struct.PlayerInfo>(playerList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder> playerListBuilder_;

      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public java.util.List<com.violet.rpc.Struct.PlayerInfo> getPlayerListList() {
        if (playerListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerList_);
        } else {
          return playerListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public int getPlayerListCount() {
        if (playerListBuilder_ == null) {
          return playerList_.size();
        } else {
          return playerListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo getPlayerList(int index) {
        if (playerListBuilder_ == null) {
          return playerList_.get(index);
        } else {
          return playerListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder setPlayerList(
          int index, com.violet.rpc.Struct.PlayerInfo value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.set(index, value);
          onChanged();
        } else {
          playerListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder setPlayerList(
          int index, com.violet.rpc.Struct.PlayerInfo.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(com.violet.rpc.Struct.PlayerInfo value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.add(value);
          onChanged();
        } else {
          playerListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          int index, com.violet.rpc.Struct.PlayerInfo value) {
        if (playerListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerListIsMutable();
          playerList_.add(index, value);
          onChanged();
        } else {
          playerListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          com.violet.rpc.Struct.PlayerInfo.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.add(builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addPlayerList(
          int index, com.violet.rpc.Struct.PlayerInfo.Builder builderForValue) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder addAllPlayerList(
          java.lang.Iterable<? extends com.violet.rpc.Struct.PlayerInfo> values) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerList_);
          onChanged();
        } else {
          playerListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder clearPlayerList() {
        if (playerListBuilder_ == null) {
          playerList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public Builder removePlayerList(int index) {
        if (playerListBuilder_ == null) {
          ensurePlayerListIsMutable();
          playerList_.remove(index);
          onChanged();
        } else {
          playerListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo.Builder getPlayerListBuilder(
          int index) {
        return getPlayerListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerListOrBuilder(
          int index) {
        if (playerListBuilder_ == null) {
          return playerList_.get(index);  } else {
          return playerListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public java.util.List<? extends com.violet.rpc.Struct.PlayerInfoOrBuilder> 
           getPlayerListOrBuilderList() {
        if (playerListBuilder_ != null) {
          return playerListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerList_);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo.Builder addPlayerListBuilder() {
        return getPlayerListFieldBuilder().addBuilder(
            com.violet.rpc.Struct.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo.Builder addPlayerListBuilder(
          int index) {
        return getPlayerListFieldBuilder().addBuilder(
            index, com.violet.rpc.Struct.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.violet.rpc.PlayerInfo playerList = 1;</code>
       */
      public java.util.List<com.violet.rpc.Struct.PlayerInfo.Builder> 
           getPlayerListBuilderList() {
        return getPlayerListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder> 
          getPlayerListFieldBuilder() {
        if (playerListBuilder_ == null) {
          playerListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder>(
                  playerList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerList_ = null;
        }
        return playerListBuilder_;
      }

      private int roundOrder_ ;
      /**
       * <pre>
       *回合顺序位置，从0开始，0先手
       * </pre>
       *
       * <code>int32 roundOrder = 2;</code>
       */
      public int getRoundOrder() {
        return roundOrder_;
      }
      /**
       * <pre>
       *回合顺序位置，从0开始，0先手
       * </pre>
       *
       * <code>int32 roundOrder = 2;</code>
       */
      public Builder setRoundOrder(int value) {
        
        roundOrder_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *回合顺序位置，从0开始，0先手
       * </pre>
       *
       * <code>int32 roundOrder = 2;</code>
       */
      public Builder clearRoundOrder() {
        
        roundOrder_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.violet.rpc.Struct.ChessData> chessSetting_ =
        java.util.Collections.emptyList();
      private void ensureChessSettingIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          chessSetting_ = new java.util.ArrayList<com.violet.rpc.Struct.ChessData>(chessSetting_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder> chessSettingBuilder_;

      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public java.util.List<com.violet.rpc.Struct.ChessData> getChessSettingList() {
        if (chessSettingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chessSetting_);
        } else {
          return chessSettingBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public int getChessSettingCount() {
        if (chessSettingBuilder_ == null) {
          return chessSetting_.size();
        } else {
          return chessSettingBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public com.violet.rpc.Struct.ChessData getChessSetting(int index) {
        if (chessSettingBuilder_ == null) {
          return chessSetting_.get(index);
        } else {
          return chessSettingBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder setChessSetting(
          int index, com.violet.rpc.Struct.ChessData value) {
        if (chessSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessSettingIsMutable();
          chessSetting_.set(index, value);
          onChanged();
        } else {
          chessSettingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder setChessSetting(
          int index, com.violet.rpc.Struct.ChessData.Builder builderForValue) {
        if (chessSettingBuilder_ == null) {
          ensureChessSettingIsMutable();
          chessSetting_.set(index, builderForValue.build());
          onChanged();
        } else {
          chessSettingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder addChessSetting(com.violet.rpc.Struct.ChessData value) {
        if (chessSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessSettingIsMutable();
          chessSetting_.add(value);
          onChanged();
        } else {
          chessSettingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder addChessSetting(
          int index, com.violet.rpc.Struct.ChessData value) {
        if (chessSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessSettingIsMutable();
          chessSetting_.add(index, value);
          onChanged();
        } else {
          chessSettingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder addChessSetting(
          com.violet.rpc.Struct.ChessData.Builder builderForValue) {
        if (chessSettingBuilder_ == null) {
          ensureChessSettingIsMutable();
          chessSetting_.add(builderForValue.build());
          onChanged();
        } else {
          chessSettingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder addChessSetting(
          int index, com.violet.rpc.Struct.ChessData.Builder builderForValue) {
        if (chessSettingBuilder_ == null) {
          ensureChessSettingIsMutable();
          chessSetting_.add(index, builderForValue.build());
          onChanged();
        } else {
          chessSettingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder addAllChessSetting(
          java.lang.Iterable<? extends com.violet.rpc.Struct.ChessData> values) {
        if (chessSettingBuilder_ == null) {
          ensureChessSettingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, chessSetting_);
          onChanged();
        } else {
          chessSettingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder clearChessSetting() {
        if (chessSettingBuilder_ == null) {
          chessSetting_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          chessSettingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public Builder removeChessSetting(int index) {
        if (chessSettingBuilder_ == null) {
          ensureChessSettingIsMutable();
          chessSetting_.remove(index);
          onChanged();
        } else {
          chessSettingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public com.violet.rpc.Struct.ChessData.Builder getChessSettingBuilder(
          int index) {
        return getChessSettingFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public com.violet.rpc.Struct.ChessDataOrBuilder getChessSettingOrBuilder(
          int index) {
        if (chessSettingBuilder_ == null) {
          return chessSetting_.get(index);  } else {
          return chessSettingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public java.util.List<? extends com.violet.rpc.Struct.ChessDataOrBuilder> 
           getChessSettingOrBuilderList() {
        if (chessSettingBuilder_ != null) {
          return chessSettingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chessSetting_);
        }
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public com.violet.rpc.Struct.ChessData.Builder addChessSettingBuilder() {
        return getChessSettingFieldBuilder().addBuilder(
            com.violet.rpc.Struct.ChessData.getDefaultInstance());
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public com.violet.rpc.Struct.ChessData.Builder addChessSettingBuilder(
          int index) {
        return getChessSettingFieldBuilder().addBuilder(
            index, com.violet.rpc.Struct.ChessData.getDefaultInstance());
      }
      /**
       * <pre>
       *我方上次的摆子设置
       * </pre>
       *
       * <code>repeated .com.violet.rpc.ChessData chessSetting = 3;</code>
       */
      public java.util.List<com.violet.rpc.Struct.ChessData.Builder> 
           getChessSettingBuilderList() {
        return getChessSettingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder> 
          getChessSettingFieldBuilder() {
        if (chessSettingBuilder_ == null) {
          chessSettingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder>(
                  chessSetting_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          chessSetting_ = null;
        }
        return chessSettingBuilder_;
      }

      private java.lang.Object roomId_ = "";
      /**
       * <code>string roomId = 4;</code>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string roomId = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string roomId = 4;</code>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string roomId = 4;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <code>string roomId = 4;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        roomId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.violet.rpc.EnterBattleFieldPush)
    }

    // @@protoc_insertion_point(class_scope:com.violet.rpc.EnterBattleFieldPush)
    private static final com.violet.rpc.Push.EnterBattleFieldPush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.violet.rpc.Push.EnterBattleFieldPush();
    }

    public static com.violet.rpc.Push.EnterBattleFieldPush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EnterBattleFieldPush>
        PARSER = new com.google.protobuf.AbstractParser<EnterBattleFieldPush>() {
      public EnterBattleFieldPush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new EnterBattleFieldPush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EnterBattleFieldPush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EnterBattleFieldPush> getParserForType() {
      return PARSER;
    }

    public com.violet.rpc.Push.EnterBattleFieldPush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerStateChangePushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.violet.rpc.PlayerStateChangePush)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
     */
    boolean hasPlayerInfo();
    /**
     * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
     */
    com.violet.rpc.Struct.PlayerInfo getPlayerInfo();
    /**
     * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
     */
    com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerInfoOrBuilder();
  }
  /**
   * <pre>
   *敌人状态改变
   * </pre>
   *
   * Protobuf type {@code com.violet.rpc.PlayerStateChangePush}
   */
  public  static final class PlayerStateChangePush extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.violet.rpc.PlayerStateChangePush)
      PlayerStateChangePushOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlayerStateChangePush.newBuilder() to construct.
    private PlayerStateChangePush(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlayerStateChangePush() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerStateChangePush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.violet.rpc.Struct.PlayerInfo.Builder subBuilder = null;
              if (playerInfo_ != null) {
                subBuilder = playerInfo_.toBuilder();
              }
              playerInfo_ = input.readMessage(com.violet.rpc.Struct.PlayerInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerInfo_);
                playerInfo_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_PlayerStateChangePush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_PlayerStateChangePush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.violet.rpc.Push.PlayerStateChangePush.class, com.violet.rpc.Push.PlayerStateChangePush.Builder.class);
    }

    public static final int PLAYERINFO_FIELD_NUMBER = 1;
    private com.violet.rpc.Struct.PlayerInfo playerInfo_;
    /**
     * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
     */
    public boolean hasPlayerInfo() {
      return playerInfo_ != null;
    }
    /**
     * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
     */
    public com.violet.rpc.Struct.PlayerInfo getPlayerInfo() {
      return playerInfo_ == null ? com.violet.rpc.Struct.PlayerInfo.getDefaultInstance() : playerInfo_;
    }
    /**
     * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
     */
    public com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerInfoOrBuilder() {
      return getPlayerInfo();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (playerInfo_ != null) {
        output.writeMessage(1, getPlayerInfo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (playerInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlayerInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.violet.rpc.Push.PlayerStateChangePush)) {
        return super.equals(obj);
      }
      com.violet.rpc.Push.PlayerStateChangePush other = (com.violet.rpc.Push.PlayerStateChangePush) obj;

      boolean result = true;
      result = result && (hasPlayerInfo() == other.hasPlayerInfo());
      if (hasPlayerInfo()) {
        result = result && getPlayerInfo()
            .equals(other.getPlayerInfo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayerInfo()) {
        hash = (37 * hash) + PLAYERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.PlayerStateChangePush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.violet.rpc.Push.PlayerStateChangePush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *敌人状态改变
     * </pre>
     *
     * Protobuf type {@code com.violet.rpc.PlayerStateChangePush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.violet.rpc.PlayerStateChangePush)
        com.violet.rpc.Push.PlayerStateChangePushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_PlayerStateChangePush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_PlayerStateChangePush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.violet.rpc.Push.PlayerStateChangePush.class, com.violet.rpc.Push.PlayerStateChangePush.Builder.class);
      }

      // Construct using com.violet.rpc.Push.PlayerStateChangePush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (playerInfoBuilder_ == null) {
          playerInfo_ = null;
        } else {
          playerInfo_ = null;
          playerInfoBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_PlayerStateChangePush_descriptor;
      }

      public com.violet.rpc.Push.PlayerStateChangePush getDefaultInstanceForType() {
        return com.violet.rpc.Push.PlayerStateChangePush.getDefaultInstance();
      }

      public com.violet.rpc.Push.PlayerStateChangePush build() {
        com.violet.rpc.Push.PlayerStateChangePush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.violet.rpc.Push.PlayerStateChangePush buildPartial() {
        com.violet.rpc.Push.PlayerStateChangePush result = new com.violet.rpc.Push.PlayerStateChangePush(this);
        if (playerInfoBuilder_ == null) {
          result.playerInfo_ = playerInfo_;
        } else {
          result.playerInfo_ = playerInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.violet.rpc.Push.PlayerStateChangePush) {
          return mergeFrom((com.violet.rpc.Push.PlayerStateChangePush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.violet.rpc.Push.PlayerStateChangePush other) {
        if (other == com.violet.rpc.Push.PlayerStateChangePush.getDefaultInstance()) return this;
        if (other.hasPlayerInfo()) {
          mergePlayerInfo(other.getPlayerInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.violet.rpc.Push.PlayerStateChangePush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.violet.rpc.Push.PlayerStateChangePush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.violet.rpc.Struct.PlayerInfo playerInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder> playerInfoBuilder_;
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      public boolean hasPlayerInfo() {
        return playerInfoBuilder_ != null || playerInfo_ != null;
      }
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo getPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          return playerInfo_ == null ? com.violet.rpc.Struct.PlayerInfo.getDefaultInstance() : playerInfo_;
        } else {
          return playerInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      public Builder setPlayerInfo(com.violet.rpc.Struct.PlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerInfo_ = value;
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      public Builder setPlayerInfo(
          com.violet.rpc.Struct.PlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = builderForValue.build();
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      public Builder mergePlayerInfo(com.violet.rpc.Struct.PlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (playerInfo_ != null) {
            playerInfo_ =
              com.violet.rpc.Struct.PlayerInfo.newBuilder(playerInfo_).mergeFrom(value).buildPartial();
          } else {
            playerInfo_ = value;
          }
          onChanged();
        } else {
          playerInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      public Builder clearPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = null;
          onChanged();
        } else {
          playerInfo_ = null;
          playerInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo.Builder getPlayerInfoBuilder() {
        
        onChanged();
        return getPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      public com.violet.rpc.Struct.PlayerInfoOrBuilder getPlayerInfoOrBuilder() {
        if (playerInfoBuilder_ != null) {
          return playerInfoBuilder_.getMessageOrBuilder();
        } else {
          return playerInfo_ == null ?
              com.violet.rpc.Struct.PlayerInfo.getDefaultInstance() : playerInfo_;
        }
      }
      /**
       * <code>.com.violet.rpc.PlayerInfo playerInfo = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder> 
          getPlayerInfoFieldBuilder() {
        if (playerInfoBuilder_ == null) {
          playerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder>(
                  getPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          playerInfo_ = null;
        }
        return playerInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.violet.rpc.PlayerStateChangePush)
    }

    // @@protoc_insertion_point(class_scope:com.violet.rpc.PlayerStateChangePush)
    private static final com.violet.rpc.Push.PlayerStateChangePush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.violet.rpc.Push.PlayerStateChangePush();
    }

    public static com.violet.rpc.Push.PlayerStateChangePush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlayerStateChangePush>
        PARSER = new com.google.protobuf.AbstractParser<PlayerStateChangePush>() {
      public PlayerStateChangePush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerStateChangePush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlayerStateChangePush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerStateChangePush> getParserForType() {
      return PARSER;
    }

    public com.violet.rpc.Push.PlayerStateChangePush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameStateChangePushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.violet.rpc.GameStateChangePush)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *enum GameState
     * </pre>
     *
     * <code>int32 state = 1;</code>
     */
    int getState();

    /**
     * <pre>
     *enum GameResult
     * </pre>
     *
     * <code>int32 result = 2;</code>
     */
    int getResult();

    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    java.util.List<com.violet.rpc.Struct.ChessData> 
        getChessMapList();
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    com.violet.rpc.Struct.ChessData getChessMap(int index);
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    int getChessMapCount();
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    java.util.List<? extends com.violet.rpc.Struct.ChessDataOrBuilder> 
        getChessMapOrBuilderList();
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    com.violet.rpc.Struct.ChessDataOrBuilder getChessMapOrBuilder(
        int index);

    /**
     * <code>int32 counter = 4;</code>
     */
    int getCounter();
  }
  /**
   * <pre>
   *游戏状态改变：布子，布子完成，游戏结束
   * </pre>
   *
   * Protobuf type {@code com.violet.rpc.GameStateChangePush}
   */
  public  static final class GameStateChangePush extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.violet.rpc.GameStateChangePush)
      GameStateChangePushOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameStateChangePush.newBuilder() to construct.
    private GameStateChangePush(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameStateChangePush() {
      state_ = 0;
      result_ = 0;
      chessMap_ = java.util.Collections.emptyList();
      counter_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameStateChangePush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              state_ = input.readInt32();
              break;
            }
            case 16: {

              result_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                chessMap_ = new java.util.ArrayList<com.violet.rpc.Struct.ChessData>();
                mutable_bitField0_ |= 0x00000004;
              }
              chessMap_.add(
                  input.readMessage(com.violet.rpc.Struct.ChessData.parser(), extensionRegistry));
              break;
            }
            case 32: {

              counter_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          chessMap_ = java.util.Collections.unmodifiableList(chessMap_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_GameStateChangePush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_GameStateChangePush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.violet.rpc.Push.GameStateChangePush.class, com.violet.rpc.Push.GameStateChangePush.Builder.class);
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <pre>
     *enum GameState
     * </pre>
     *
     * <code>int32 state = 1;</code>
     */
    public int getState() {
      return state_;
    }

    public static final int RESULT_FIELD_NUMBER = 2;
    private int result_;
    /**
     * <pre>
     *enum GameResult
     * </pre>
     *
     * <code>int32 result = 2;</code>
     */
    public int getResult() {
      return result_;
    }

    public static final int CHESSMAP_FIELD_NUMBER = 3;
    private java.util.List<com.violet.rpc.Struct.ChessData> chessMap_;
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    public java.util.List<com.violet.rpc.Struct.ChessData> getChessMapList() {
      return chessMap_;
    }
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    public java.util.List<? extends com.violet.rpc.Struct.ChessDataOrBuilder> 
        getChessMapOrBuilderList() {
      return chessMap_;
    }
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    public int getChessMapCount() {
      return chessMap_.size();
    }
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    public com.violet.rpc.Struct.ChessData getChessMap(int index) {
      return chessMap_.get(index);
    }
    /**
     * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
     */
    public com.violet.rpc.Struct.ChessDataOrBuilder getChessMapOrBuilder(
        int index) {
      return chessMap_.get(index);
    }

    public static final int COUNTER_FIELD_NUMBER = 4;
    private int counter_;
    /**
     * <code>int32 counter = 4;</code>
     */
    public int getCounter() {
      return counter_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (state_ != 0) {
        output.writeInt32(1, state_);
      }
      if (result_ != 0) {
        output.writeInt32(2, result_);
      }
      for (int i = 0; i < chessMap_.size(); i++) {
        output.writeMessage(3, chessMap_.get(i));
      }
      if (counter_ != 0) {
        output.writeInt32(4, counter_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (state_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, state_);
      }
      if (result_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, result_);
      }
      for (int i = 0; i < chessMap_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, chessMap_.get(i));
      }
      if (counter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, counter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.violet.rpc.Push.GameStateChangePush)) {
        return super.equals(obj);
      }
      com.violet.rpc.Push.GameStateChangePush other = (com.violet.rpc.Push.GameStateChangePush) obj;

      boolean result = true;
      result = result && (getState()
          == other.getState());
      result = result && (getResult()
          == other.getResult());
      result = result && getChessMapList()
          .equals(other.getChessMapList());
      result = result && (getCounter()
          == other.getCounter());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + getState();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + getResult();
      if (getChessMapCount() > 0) {
        hash = (37 * hash) + CHESSMAP_FIELD_NUMBER;
        hash = (53 * hash) + getChessMapList().hashCode();
      }
      hash = (37 * hash) + COUNTER_FIELD_NUMBER;
      hash = (53 * hash) + getCounter();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.violet.rpc.Push.GameStateChangePush parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.GameStateChangePush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.violet.rpc.Push.GameStateChangePush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *游戏状态改变：布子，布子完成，游戏结束
     * </pre>
     *
     * Protobuf type {@code com.violet.rpc.GameStateChangePush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.violet.rpc.GameStateChangePush)
        com.violet.rpc.Push.GameStateChangePushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_GameStateChangePush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_GameStateChangePush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.violet.rpc.Push.GameStateChangePush.class, com.violet.rpc.Push.GameStateChangePush.Builder.class);
      }

      // Construct using com.violet.rpc.Push.GameStateChangePush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChessMapFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        state_ = 0;

        result_ = 0;

        if (chessMapBuilder_ == null) {
          chessMap_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          chessMapBuilder_.clear();
        }
        counter_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_GameStateChangePush_descriptor;
      }

      public com.violet.rpc.Push.GameStateChangePush getDefaultInstanceForType() {
        return com.violet.rpc.Push.GameStateChangePush.getDefaultInstance();
      }

      public com.violet.rpc.Push.GameStateChangePush build() {
        com.violet.rpc.Push.GameStateChangePush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.violet.rpc.Push.GameStateChangePush buildPartial() {
        com.violet.rpc.Push.GameStateChangePush result = new com.violet.rpc.Push.GameStateChangePush(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.state_ = state_;
        result.result_ = result_;
        if (chessMapBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            chessMap_ = java.util.Collections.unmodifiableList(chessMap_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.chessMap_ = chessMap_;
        } else {
          result.chessMap_ = chessMapBuilder_.build();
        }
        result.counter_ = counter_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.violet.rpc.Push.GameStateChangePush) {
          return mergeFrom((com.violet.rpc.Push.GameStateChangePush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.violet.rpc.Push.GameStateChangePush other) {
        if (other == com.violet.rpc.Push.GameStateChangePush.getDefaultInstance()) return this;
        if (other.getState() != 0) {
          setState(other.getState());
        }
        if (other.getResult() != 0) {
          setResult(other.getResult());
        }
        if (chessMapBuilder_ == null) {
          if (!other.chessMap_.isEmpty()) {
            if (chessMap_.isEmpty()) {
              chessMap_ = other.chessMap_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChessMapIsMutable();
              chessMap_.addAll(other.chessMap_);
            }
            onChanged();
          }
        } else {
          if (!other.chessMap_.isEmpty()) {
            if (chessMapBuilder_.isEmpty()) {
              chessMapBuilder_.dispose();
              chessMapBuilder_ = null;
              chessMap_ = other.chessMap_;
              bitField0_ = (bitField0_ & ~0x00000004);
              chessMapBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChessMapFieldBuilder() : null;
            } else {
              chessMapBuilder_.addAllMessages(other.chessMap_);
            }
          }
        }
        if (other.getCounter() != 0) {
          setCounter(other.getCounter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.violet.rpc.Push.GameStateChangePush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.violet.rpc.Push.GameStateChangePush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int state_ ;
      /**
       * <pre>
       *enum GameState
       * </pre>
       *
       * <code>int32 state = 1;</code>
       */
      public int getState() {
        return state_;
      }
      /**
       * <pre>
       *enum GameState
       * </pre>
       *
       * <code>int32 state = 1;</code>
       */
      public Builder setState(int value) {
        
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *enum GameState
       * </pre>
       *
       * <code>int32 state = 1;</code>
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }

      private int result_ ;
      /**
       * <pre>
       *enum GameResult
       * </pre>
       *
       * <code>int32 result = 2;</code>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <pre>
       *enum GameResult
       * </pre>
       *
       * <code>int32 result = 2;</code>
       */
      public Builder setResult(int value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *enum GameResult
       * </pre>
       *
       * <code>int32 result = 2;</code>
       */
      public Builder clearResult() {
        
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.violet.rpc.Struct.ChessData> chessMap_ =
        java.util.Collections.emptyList();
      private void ensureChessMapIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          chessMap_ = new java.util.ArrayList<com.violet.rpc.Struct.ChessData>(chessMap_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder> chessMapBuilder_;

      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public java.util.List<com.violet.rpc.Struct.ChessData> getChessMapList() {
        if (chessMapBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chessMap_);
        } else {
          return chessMapBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public int getChessMapCount() {
        if (chessMapBuilder_ == null) {
          return chessMap_.size();
        } else {
          return chessMapBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public com.violet.rpc.Struct.ChessData getChessMap(int index) {
        if (chessMapBuilder_ == null) {
          return chessMap_.get(index);
        } else {
          return chessMapBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder setChessMap(
          int index, com.violet.rpc.Struct.ChessData value) {
        if (chessMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessMapIsMutable();
          chessMap_.set(index, value);
          onChanged();
        } else {
          chessMapBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder setChessMap(
          int index, com.violet.rpc.Struct.ChessData.Builder builderForValue) {
        if (chessMapBuilder_ == null) {
          ensureChessMapIsMutable();
          chessMap_.set(index, builderForValue.build());
          onChanged();
        } else {
          chessMapBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder addChessMap(com.violet.rpc.Struct.ChessData value) {
        if (chessMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessMapIsMutable();
          chessMap_.add(value);
          onChanged();
        } else {
          chessMapBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder addChessMap(
          int index, com.violet.rpc.Struct.ChessData value) {
        if (chessMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChessMapIsMutable();
          chessMap_.add(index, value);
          onChanged();
        } else {
          chessMapBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder addChessMap(
          com.violet.rpc.Struct.ChessData.Builder builderForValue) {
        if (chessMapBuilder_ == null) {
          ensureChessMapIsMutable();
          chessMap_.add(builderForValue.build());
          onChanged();
        } else {
          chessMapBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder addChessMap(
          int index, com.violet.rpc.Struct.ChessData.Builder builderForValue) {
        if (chessMapBuilder_ == null) {
          ensureChessMapIsMutable();
          chessMap_.add(index, builderForValue.build());
          onChanged();
        } else {
          chessMapBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder addAllChessMap(
          java.lang.Iterable<? extends com.violet.rpc.Struct.ChessData> values) {
        if (chessMapBuilder_ == null) {
          ensureChessMapIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, chessMap_);
          onChanged();
        } else {
          chessMapBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder clearChessMap() {
        if (chessMapBuilder_ == null) {
          chessMap_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          chessMapBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public Builder removeChessMap(int index) {
        if (chessMapBuilder_ == null) {
          ensureChessMapIsMutable();
          chessMap_.remove(index);
          onChanged();
        } else {
          chessMapBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public com.violet.rpc.Struct.ChessData.Builder getChessMapBuilder(
          int index) {
        return getChessMapFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public com.violet.rpc.Struct.ChessDataOrBuilder getChessMapOrBuilder(
          int index) {
        if (chessMapBuilder_ == null) {
          return chessMap_.get(index);  } else {
          return chessMapBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public java.util.List<? extends com.violet.rpc.Struct.ChessDataOrBuilder> 
           getChessMapOrBuilderList() {
        if (chessMapBuilder_ != null) {
          return chessMapBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chessMap_);
        }
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public com.violet.rpc.Struct.ChessData.Builder addChessMapBuilder() {
        return getChessMapFieldBuilder().addBuilder(
            com.violet.rpc.Struct.ChessData.getDefaultInstance());
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public com.violet.rpc.Struct.ChessData.Builder addChessMapBuilder(
          int index) {
        return getChessMapFieldBuilder().addBuilder(
            index, com.violet.rpc.Struct.ChessData.getDefaultInstance());
      }
      /**
       * <code>repeated .com.violet.rpc.ChessData chessMap = 3;</code>
       */
      public java.util.List<com.violet.rpc.Struct.ChessData.Builder> 
           getChessMapBuilderList() {
        return getChessMapFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder> 
          getChessMapFieldBuilder() {
        if (chessMapBuilder_ == null) {
          chessMapBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder>(
                  chessMap_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          chessMap_ = null;
        }
        return chessMapBuilder_;
      }

      private int counter_ ;
      /**
       * <code>int32 counter = 4;</code>
       */
      public int getCounter() {
        return counter_;
      }
      /**
       * <code>int32 counter = 4;</code>
       */
      public Builder setCounter(int value) {
        
        counter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 counter = 4;</code>
       */
      public Builder clearCounter() {
        
        counter_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.violet.rpc.GameStateChangePush)
    }

    // @@protoc_insertion_point(class_scope:com.violet.rpc.GameStateChangePush)
    private static final com.violet.rpc.Push.GameStateChangePush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.violet.rpc.Push.GameStateChangePush();
    }

    public static com.violet.rpc.Push.GameStateChangePush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameStateChangePush>
        PARSER = new com.google.protobuf.AbstractParser<GameStateChangePush>() {
      public GameStateChangePush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GameStateChangePush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameStateChangePush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameStateChangePush> getParserForType() {
      return PARSER;
    }

    public com.violet.rpc.Push.GameStateChangePush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChessMovePushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.violet.rpc.ChessMovePush)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.violet.rpc.ChessData source = 1;</code>
     */
    boolean hasSource();
    /**
     * <code>.com.violet.rpc.ChessData source = 1;</code>
     */
    com.violet.rpc.Struct.ChessData getSource();
    /**
     * <code>.com.violet.rpc.ChessData source = 1;</code>
     */
    com.violet.rpc.Struct.ChessDataOrBuilder getSourceOrBuilder();

    /**
     * <code>.com.violet.rpc.ChessData target = 2;</code>
     */
    boolean hasTarget();
    /**
     * <code>.com.violet.rpc.ChessData target = 2;</code>
     */
    com.violet.rpc.Struct.ChessData getTarget();
    /**
     * <code>.com.violet.rpc.ChessData target = 2;</code>
     */
    com.violet.rpc.Struct.ChessDataOrBuilder getTargetOrBuilder();

    /**
     * <pre>
     *enum ChessMoveResult
     * </pre>
     *
     * <code>int32 chessMoveResult = 3;</code>
     */
    int getChessMoveResult();

    /**
     * <pre>
     *计数器
     * </pre>
     *
     * <code>int32 counter = 4;</code>
     */
    int getCounter();

    /**
     * <pre>
     *走子的人
     * </pre>
     *
     * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
     */
    boolean hasOperator();
    /**
     * <pre>
     *走子的人
     * </pre>
     *
     * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
     */
    com.violet.rpc.Struct.PlayerInfo getOperator();
    /**
     * <pre>
     *走子的人
     * </pre>
     *
     * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
     */
    com.violet.rpc.Struct.PlayerInfoOrBuilder getOperatorOrBuilder();
  }
  /**
   * Protobuf type {@code com.violet.rpc.ChessMovePush}
   */
  public  static final class ChessMovePush extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.violet.rpc.ChessMovePush)
      ChessMovePushOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChessMovePush.newBuilder() to construct.
    private ChessMovePush(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChessMovePush() {
      chessMoveResult_ = 0;
      counter_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChessMovePush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.violet.rpc.Struct.ChessData.Builder subBuilder = null;
              if (source_ != null) {
                subBuilder = source_.toBuilder();
              }
              source_ = input.readMessage(com.violet.rpc.Struct.ChessData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(source_);
                source_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.violet.rpc.Struct.ChessData.Builder subBuilder = null;
              if (target_ != null) {
                subBuilder = target_.toBuilder();
              }
              target_ = input.readMessage(com.violet.rpc.Struct.ChessData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(target_);
                target_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              chessMoveResult_ = input.readInt32();
              break;
            }
            case 32: {

              counter_ = input.readInt32();
              break;
            }
            case 42: {
              com.violet.rpc.Struct.PlayerInfo.Builder subBuilder = null;
              if (operator_ != null) {
                subBuilder = operator_.toBuilder();
              }
              operator_ = input.readMessage(com.violet.rpc.Struct.PlayerInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(operator_);
                operator_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_ChessMovePush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_ChessMovePush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.violet.rpc.Push.ChessMovePush.class, com.violet.rpc.Push.ChessMovePush.Builder.class);
    }

    public static final int SOURCE_FIELD_NUMBER = 1;
    private com.violet.rpc.Struct.ChessData source_;
    /**
     * <code>.com.violet.rpc.ChessData source = 1;</code>
     */
    public boolean hasSource() {
      return source_ != null;
    }
    /**
     * <code>.com.violet.rpc.ChessData source = 1;</code>
     */
    public com.violet.rpc.Struct.ChessData getSource() {
      return source_ == null ? com.violet.rpc.Struct.ChessData.getDefaultInstance() : source_;
    }
    /**
     * <code>.com.violet.rpc.ChessData source = 1;</code>
     */
    public com.violet.rpc.Struct.ChessDataOrBuilder getSourceOrBuilder() {
      return getSource();
    }

    public static final int TARGET_FIELD_NUMBER = 2;
    private com.violet.rpc.Struct.ChessData target_;
    /**
     * <code>.com.violet.rpc.ChessData target = 2;</code>
     */
    public boolean hasTarget() {
      return target_ != null;
    }
    /**
     * <code>.com.violet.rpc.ChessData target = 2;</code>
     */
    public com.violet.rpc.Struct.ChessData getTarget() {
      return target_ == null ? com.violet.rpc.Struct.ChessData.getDefaultInstance() : target_;
    }
    /**
     * <code>.com.violet.rpc.ChessData target = 2;</code>
     */
    public com.violet.rpc.Struct.ChessDataOrBuilder getTargetOrBuilder() {
      return getTarget();
    }

    public static final int CHESSMOVERESULT_FIELD_NUMBER = 3;
    private int chessMoveResult_;
    /**
     * <pre>
     *enum ChessMoveResult
     * </pre>
     *
     * <code>int32 chessMoveResult = 3;</code>
     */
    public int getChessMoveResult() {
      return chessMoveResult_;
    }

    public static final int COUNTER_FIELD_NUMBER = 4;
    private int counter_;
    /**
     * <pre>
     *计数器
     * </pre>
     *
     * <code>int32 counter = 4;</code>
     */
    public int getCounter() {
      return counter_;
    }

    public static final int OPERATOR_FIELD_NUMBER = 5;
    private com.violet.rpc.Struct.PlayerInfo operator_;
    /**
     * <pre>
     *走子的人
     * </pre>
     *
     * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
     */
    public boolean hasOperator() {
      return operator_ != null;
    }
    /**
     * <pre>
     *走子的人
     * </pre>
     *
     * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
     */
    public com.violet.rpc.Struct.PlayerInfo getOperator() {
      return operator_ == null ? com.violet.rpc.Struct.PlayerInfo.getDefaultInstance() : operator_;
    }
    /**
     * <pre>
     *走子的人
     * </pre>
     *
     * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
     */
    public com.violet.rpc.Struct.PlayerInfoOrBuilder getOperatorOrBuilder() {
      return getOperator();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (source_ != null) {
        output.writeMessage(1, getSource());
      }
      if (target_ != null) {
        output.writeMessage(2, getTarget());
      }
      if (chessMoveResult_ != 0) {
        output.writeInt32(3, chessMoveResult_);
      }
      if (counter_ != 0) {
        output.writeInt32(4, counter_);
      }
      if (operator_ != null) {
        output.writeMessage(5, getOperator());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (source_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSource());
      }
      if (target_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTarget());
      }
      if (chessMoveResult_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, chessMoveResult_);
      }
      if (counter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, counter_);
      }
      if (operator_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getOperator());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.violet.rpc.Push.ChessMovePush)) {
        return super.equals(obj);
      }
      com.violet.rpc.Push.ChessMovePush other = (com.violet.rpc.Push.ChessMovePush) obj;

      boolean result = true;
      result = result && (hasSource() == other.hasSource());
      if (hasSource()) {
        result = result && getSource()
            .equals(other.getSource());
      }
      result = result && (hasTarget() == other.hasTarget());
      if (hasTarget()) {
        result = result && getTarget()
            .equals(other.getTarget());
      }
      result = result && (getChessMoveResult()
          == other.getChessMoveResult());
      result = result && (getCounter()
          == other.getCounter());
      result = result && (hasOperator() == other.hasOperator());
      if (hasOperator()) {
        result = result && getOperator()
            .equals(other.getOperator());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
      }
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getTarget().hashCode();
      }
      hash = (37 * hash) + CHESSMOVERESULT_FIELD_NUMBER;
      hash = (53 * hash) + getChessMoveResult();
      hash = (37 * hash) + COUNTER_FIELD_NUMBER;
      hash = (53 * hash) + getCounter();
      if (hasOperator()) {
        hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
        hash = (53 * hash) + getOperator().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.violet.rpc.Push.ChessMovePush parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChessMovePush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.ChessMovePush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.ChessMovePush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.violet.rpc.Push.ChessMovePush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.violet.rpc.ChessMovePush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.violet.rpc.ChessMovePush)
        com.violet.rpc.Push.ChessMovePushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_ChessMovePush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_ChessMovePush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.violet.rpc.Push.ChessMovePush.class, com.violet.rpc.Push.ChessMovePush.Builder.class);
      }

      // Construct using com.violet.rpc.Push.ChessMovePush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (sourceBuilder_ == null) {
          source_ = null;
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }
        if (targetBuilder_ == null) {
          target_ = null;
        } else {
          target_ = null;
          targetBuilder_ = null;
        }
        chessMoveResult_ = 0;

        counter_ = 0;

        if (operatorBuilder_ == null) {
          operator_ = null;
        } else {
          operator_ = null;
          operatorBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_ChessMovePush_descriptor;
      }

      public com.violet.rpc.Push.ChessMovePush getDefaultInstanceForType() {
        return com.violet.rpc.Push.ChessMovePush.getDefaultInstance();
      }

      public com.violet.rpc.Push.ChessMovePush build() {
        com.violet.rpc.Push.ChessMovePush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.violet.rpc.Push.ChessMovePush buildPartial() {
        com.violet.rpc.Push.ChessMovePush result = new com.violet.rpc.Push.ChessMovePush(this);
        if (sourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = sourceBuilder_.build();
        }
        if (targetBuilder_ == null) {
          result.target_ = target_;
        } else {
          result.target_ = targetBuilder_.build();
        }
        result.chessMoveResult_ = chessMoveResult_;
        result.counter_ = counter_;
        if (operatorBuilder_ == null) {
          result.operator_ = operator_;
        } else {
          result.operator_ = operatorBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.violet.rpc.Push.ChessMovePush) {
          return mergeFrom((com.violet.rpc.Push.ChessMovePush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.violet.rpc.Push.ChessMovePush other) {
        if (other == com.violet.rpc.Push.ChessMovePush.getDefaultInstance()) return this;
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        if (other.hasTarget()) {
          mergeTarget(other.getTarget());
        }
        if (other.getChessMoveResult() != 0) {
          setChessMoveResult(other.getChessMoveResult());
        }
        if (other.getCounter() != 0) {
          setCounter(other.getCounter());
        }
        if (other.hasOperator()) {
          mergeOperator(other.getOperator());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.violet.rpc.Push.ChessMovePush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.violet.rpc.Push.ChessMovePush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.violet.rpc.Struct.ChessData source_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder> sourceBuilder_;
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      public boolean hasSource() {
        return sourceBuilder_ != null || source_ != null;
      }
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      public com.violet.rpc.Struct.ChessData getSource() {
        if (sourceBuilder_ == null) {
          return source_ == null ? com.violet.rpc.Struct.ChessData.getDefaultInstance() : source_;
        } else {
          return sourceBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      public Builder setSource(com.violet.rpc.Struct.ChessData value) {
        if (sourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          sourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      public Builder setSource(
          com.violet.rpc.Struct.ChessData.Builder builderForValue) {
        if (sourceBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          sourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      public Builder mergeSource(com.violet.rpc.Struct.ChessData value) {
        if (sourceBuilder_ == null) {
          if (source_ != null) {
            source_ =
              com.violet.rpc.Struct.ChessData.newBuilder(source_).mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          sourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      public Builder clearSource() {
        if (sourceBuilder_ == null) {
          source_ = null;
          onChanged();
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      public com.violet.rpc.Struct.ChessData.Builder getSourceBuilder() {
        
        onChanged();
        return getSourceFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      public com.violet.rpc.Struct.ChessDataOrBuilder getSourceOrBuilder() {
        if (sourceBuilder_ != null) {
          return sourceBuilder_.getMessageOrBuilder();
        } else {
          return source_ == null ?
              com.violet.rpc.Struct.ChessData.getDefaultInstance() : source_;
        }
      }
      /**
       * <code>.com.violet.rpc.ChessData source = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder> 
          getSourceFieldBuilder() {
        if (sourceBuilder_ == null) {
          sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder>(
                  getSource(),
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        return sourceBuilder_;
      }

      private com.violet.rpc.Struct.ChessData target_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder> targetBuilder_;
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      public boolean hasTarget() {
        return targetBuilder_ != null || target_ != null;
      }
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      public com.violet.rpc.Struct.ChessData getTarget() {
        if (targetBuilder_ == null) {
          return target_ == null ? com.violet.rpc.Struct.ChessData.getDefaultInstance() : target_;
        } else {
          return targetBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      public Builder setTarget(com.violet.rpc.Struct.ChessData value) {
        if (targetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          targetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      public Builder setTarget(
          com.violet.rpc.Struct.ChessData.Builder builderForValue) {
        if (targetBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          targetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      public Builder mergeTarget(com.violet.rpc.Struct.ChessData value) {
        if (targetBuilder_ == null) {
          if (target_ != null) {
            target_ =
              com.violet.rpc.Struct.ChessData.newBuilder(target_).mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          targetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      public Builder clearTarget() {
        if (targetBuilder_ == null) {
          target_ = null;
          onChanged();
        } else {
          target_ = null;
          targetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      public com.violet.rpc.Struct.ChessData.Builder getTargetBuilder() {
        
        onChanged();
        return getTargetFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      public com.violet.rpc.Struct.ChessDataOrBuilder getTargetOrBuilder() {
        if (targetBuilder_ != null) {
          return targetBuilder_.getMessageOrBuilder();
        } else {
          return target_ == null ?
              com.violet.rpc.Struct.ChessData.getDefaultInstance() : target_;
        }
      }
      /**
       * <code>.com.violet.rpc.ChessData target = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder> 
          getTargetFieldBuilder() {
        if (targetBuilder_ == null) {
          targetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.violet.rpc.Struct.ChessData, com.violet.rpc.Struct.ChessData.Builder, com.violet.rpc.Struct.ChessDataOrBuilder>(
                  getTarget(),
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        return targetBuilder_;
      }

      private int chessMoveResult_ ;
      /**
       * <pre>
       *enum ChessMoveResult
       * </pre>
       *
       * <code>int32 chessMoveResult = 3;</code>
       */
      public int getChessMoveResult() {
        return chessMoveResult_;
      }
      /**
       * <pre>
       *enum ChessMoveResult
       * </pre>
       *
       * <code>int32 chessMoveResult = 3;</code>
       */
      public Builder setChessMoveResult(int value) {
        
        chessMoveResult_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *enum ChessMoveResult
       * </pre>
       *
       * <code>int32 chessMoveResult = 3;</code>
       */
      public Builder clearChessMoveResult() {
        
        chessMoveResult_ = 0;
        onChanged();
        return this;
      }

      private int counter_ ;
      /**
       * <pre>
       *计数器
       * </pre>
       *
       * <code>int32 counter = 4;</code>
       */
      public int getCounter() {
        return counter_;
      }
      /**
       * <pre>
       *计数器
       * </pre>
       *
       * <code>int32 counter = 4;</code>
       */
      public Builder setCounter(int value) {
        
        counter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *计数器
       * </pre>
       *
       * <code>int32 counter = 4;</code>
       */
      public Builder clearCounter() {
        
        counter_ = 0;
        onChanged();
        return this;
      }

      private com.violet.rpc.Struct.PlayerInfo operator_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder> operatorBuilder_;
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      public boolean hasOperator() {
        return operatorBuilder_ != null || operator_ != null;
      }
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo getOperator() {
        if (operatorBuilder_ == null) {
          return operator_ == null ? com.violet.rpc.Struct.PlayerInfo.getDefaultInstance() : operator_;
        } else {
          return operatorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      public Builder setOperator(com.violet.rpc.Struct.PlayerInfo value) {
        if (operatorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operator_ = value;
          onChanged();
        } else {
          operatorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      public Builder setOperator(
          com.violet.rpc.Struct.PlayerInfo.Builder builderForValue) {
        if (operatorBuilder_ == null) {
          operator_ = builderForValue.build();
          onChanged();
        } else {
          operatorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      public Builder mergeOperator(com.violet.rpc.Struct.PlayerInfo value) {
        if (operatorBuilder_ == null) {
          if (operator_ != null) {
            operator_ =
              com.violet.rpc.Struct.PlayerInfo.newBuilder(operator_).mergeFrom(value).buildPartial();
          } else {
            operator_ = value;
          }
          onChanged();
        } else {
          operatorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      public Builder clearOperator() {
        if (operatorBuilder_ == null) {
          operator_ = null;
          onChanged();
        } else {
          operator_ = null;
          operatorBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      public com.violet.rpc.Struct.PlayerInfo.Builder getOperatorBuilder() {
        
        onChanged();
        return getOperatorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      public com.violet.rpc.Struct.PlayerInfoOrBuilder getOperatorOrBuilder() {
        if (operatorBuilder_ != null) {
          return operatorBuilder_.getMessageOrBuilder();
        } else {
          return operator_ == null ?
              com.violet.rpc.Struct.PlayerInfo.getDefaultInstance() : operator_;
        }
      }
      /**
       * <pre>
       *走子的人
       * </pre>
       *
       * <code>.com.violet.rpc.PlayerInfo operator = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder> 
          getOperatorFieldBuilder() {
        if (operatorBuilder_ == null) {
          operatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.violet.rpc.Struct.PlayerInfo, com.violet.rpc.Struct.PlayerInfo.Builder, com.violet.rpc.Struct.PlayerInfoOrBuilder>(
                  getOperator(),
                  getParentForChildren(),
                  isClean());
          operator_ = null;
        }
        return operatorBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.violet.rpc.ChessMovePush)
    }

    // @@protoc_insertion_point(class_scope:com.violet.rpc.ChessMovePush)
    private static final com.violet.rpc.Push.ChessMovePush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.violet.rpc.Push.ChessMovePush();
    }

    public static com.violet.rpc.Push.ChessMovePush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChessMovePush>
        PARSER = new com.google.protobuf.AbstractParser<ChessMovePush>() {
      public ChessMovePush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChessMovePush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChessMovePush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChessMovePush> getParserForType() {
      return PARSER;
    }

    public com.violet.rpc.Push.ChessMovePush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChatMessagePushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.violet.rpc.ChatMessagePush)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 fromWhere = 1;</code>
     */
    int getFromWhere();

    /**
     * <code>.com.violet.rpc.MessageData msg = 2;</code>
     */
    boolean hasMsg();
    /**
     * <code>.com.violet.rpc.MessageData msg = 2;</code>
     */
    com.violet.rpc.Struct.MessageData getMsg();
    /**
     * <code>.com.violet.rpc.MessageData msg = 2;</code>
     */
    com.violet.rpc.Struct.MessageDataOrBuilder getMsgOrBuilder();
  }
  /**
   * Protobuf type {@code com.violet.rpc.ChatMessagePush}
   */
  public  static final class ChatMessagePush extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.violet.rpc.ChatMessagePush)
      ChatMessagePushOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChatMessagePush.newBuilder() to construct.
    private ChatMessagePush(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChatMessagePush() {
      fromWhere_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChatMessagePush(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              fromWhere_ = input.readInt32();
              break;
            }
            case 18: {
              com.violet.rpc.Struct.MessageData.Builder subBuilder = null;
              if (msg_ != null) {
                subBuilder = msg_.toBuilder();
              }
              msg_ = input.readMessage(com.violet.rpc.Struct.MessageData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(msg_);
                msg_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_ChatMessagePush_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.violet.rpc.Push.internal_static_com_violet_rpc_ChatMessagePush_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.violet.rpc.Push.ChatMessagePush.class, com.violet.rpc.Push.ChatMessagePush.Builder.class);
    }

    public static final int FROMWHERE_FIELD_NUMBER = 1;
    private int fromWhere_;
    /**
     * <code>int32 fromWhere = 1;</code>
     */
    public int getFromWhere() {
      return fromWhere_;
    }

    public static final int MSG_FIELD_NUMBER = 2;
    private com.violet.rpc.Struct.MessageData msg_;
    /**
     * <code>.com.violet.rpc.MessageData msg = 2;</code>
     */
    public boolean hasMsg() {
      return msg_ != null;
    }
    /**
     * <code>.com.violet.rpc.MessageData msg = 2;</code>
     */
    public com.violet.rpc.Struct.MessageData getMsg() {
      return msg_ == null ? com.violet.rpc.Struct.MessageData.getDefaultInstance() : msg_;
    }
    /**
     * <code>.com.violet.rpc.MessageData msg = 2;</code>
     */
    public com.violet.rpc.Struct.MessageDataOrBuilder getMsgOrBuilder() {
      return getMsg();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromWhere_ != 0) {
        output.writeInt32(1, fromWhere_);
      }
      if (msg_ != null) {
        output.writeMessage(2, getMsg());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromWhere_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fromWhere_);
      }
      if (msg_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMsg());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.violet.rpc.Push.ChatMessagePush)) {
        return super.equals(obj);
      }
      com.violet.rpc.Push.ChatMessagePush other = (com.violet.rpc.Push.ChatMessagePush) obj;

      boolean result = true;
      result = result && (getFromWhere()
          == other.getFromWhere());
      result = result && (hasMsg() == other.hasMsg());
      if (hasMsg()) {
        result = result && getMsg()
            .equals(other.getMsg());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROMWHERE_FIELD_NUMBER;
      hash = (53 * hash) + getFromWhere();
      if (hasMsg()) {
        hash = (37 * hash) + MSG_FIELD_NUMBER;
        hash = (53 * hash) + getMsg().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.violet.rpc.Push.ChatMessagePush parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.violet.rpc.Push.ChatMessagePush parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.violet.rpc.Push.ChatMessagePush prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.violet.rpc.ChatMessagePush}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.violet.rpc.ChatMessagePush)
        com.violet.rpc.Push.ChatMessagePushOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_ChatMessagePush_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_ChatMessagePush_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.violet.rpc.Push.ChatMessagePush.class, com.violet.rpc.Push.ChatMessagePush.Builder.class);
      }

      // Construct using com.violet.rpc.Push.ChatMessagePush.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fromWhere_ = 0;

        if (msgBuilder_ == null) {
          msg_ = null;
        } else {
          msg_ = null;
          msgBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.violet.rpc.Push.internal_static_com_violet_rpc_ChatMessagePush_descriptor;
      }

      public com.violet.rpc.Push.ChatMessagePush getDefaultInstanceForType() {
        return com.violet.rpc.Push.ChatMessagePush.getDefaultInstance();
      }

      public com.violet.rpc.Push.ChatMessagePush build() {
        com.violet.rpc.Push.ChatMessagePush result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.violet.rpc.Push.ChatMessagePush buildPartial() {
        com.violet.rpc.Push.ChatMessagePush result = new com.violet.rpc.Push.ChatMessagePush(this);
        result.fromWhere_ = fromWhere_;
        if (msgBuilder_ == null) {
          result.msg_ = msg_;
        } else {
          result.msg_ = msgBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.violet.rpc.Push.ChatMessagePush) {
          return mergeFrom((com.violet.rpc.Push.ChatMessagePush)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.violet.rpc.Push.ChatMessagePush other) {
        if (other == com.violet.rpc.Push.ChatMessagePush.getDefaultInstance()) return this;
        if (other.getFromWhere() != 0) {
          setFromWhere(other.getFromWhere());
        }
        if (other.hasMsg()) {
          mergeMsg(other.getMsg());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.violet.rpc.Push.ChatMessagePush parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.violet.rpc.Push.ChatMessagePush) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int fromWhere_ ;
      /**
       * <code>int32 fromWhere = 1;</code>
       */
      public int getFromWhere() {
        return fromWhere_;
      }
      /**
       * <code>int32 fromWhere = 1;</code>
       */
      public Builder setFromWhere(int value) {
        
        fromWhere_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 fromWhere = 1;</code>
       */
      public Builder clearFromWhere() {
        
        fromWhere_ = 0;
        onChanged();
        return this;
      }

      private com.violet.rpc.Struct.MessageData msg_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.MessageData, com.violet.rpc.Struct.MessageData.Builder, com.violet.rpc.Struct.MessageDataOrBuilder> msgBuilder_;
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      public boolean hasMsg() {
        return msgBuilder_ != null || msg_ != null;
      }
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      public com.violet.rpc.Struct.MessageData getMsg() {
        if (msgBuilder_ == null) {
          return msg_ == null ? com.violet.rpc.Struct.MessageData.getDefaultInstance() : msg_;
        } else {
          return msgBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      public Builder setMsg(com.violet.rpc.Struct.MessageData value) {
        if (msgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          msgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      public Builder setMsg(
          com.violet.rpc.Struct.MessageData.Builder builderForValue) {
        if (msgBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          msgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      public Builder mergeMsg(com.violet.rpc.Struct.MessageData value) {
        if (msgBuilder_ == null) {
          if (msg_ != null) {
            msg_ =
              com.violet.rpc.Struct.MessageData.newBuilder(msg_).mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          msgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      public Builder clearMsg() {
        if (msgBuilder_ == null) {
          msg_ = null;
          onChanged();
        } else {
          msg_ = null;
          msgBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      public com.violet.rpc.Struct.MessageData.Builder getMsgBuilder() {
        
        onChanged();
        return getMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      public com.violet.rpc.Struct.MessageDataOrBuilder getMsgOrBuilder() {
        if (msgBuilder_ != null) {
          return msgBuilder_.getMessageOrBuilder();
        } else {
          return msg_ == null ?
              com.violet.rpc.Struct.MessageData.getDefaultInstance() : msg_;
        }
      }
      /**
       * <code>.com.violet.rpc.MessageData msg = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.violet.rpc.Struct.MessageData, com.violet.rpc.Struct.MessageData.Builder, com.violet.rpc.Struct.MessageDataOrBuilder> 
          getMsgFieldBuilder() {
        if (msgBuilder_ == null) {
          msgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.violet.rpc.Struct.MessageData, com.violet.rpc.Struct.MessageData.Builder, com.violet.rpc.Struct.MessageDataOrBuilder>(
                  getMsg(),
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        return msgBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.violet.rpc.ChatMessagePush)
    }

    // @@protoc_insertion_point(class_scope:com.violet.rpc.ChatMessagePush)
    private static final com.violet.rpc.Push.ChatMessagePush DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.violet.rpc.Push.ChatMessagePush();
    }

    public static com.violet.rpc.Push.ChatMessagePush getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChatMessagePush>
        PARSER = new com.google.protobuf.AbstractParser<ChatMessagePush>() {
      public ChatMessagePush parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChatMessagePush(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChatMessagePush> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChatMessagePush> getParserForType() {
      return PARSER;
    }

    public com.violet.rpc.Push.ChatMessagePush getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_violet_rpc_RoomStateChangePush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_violet_rpc_RoomStateChangePush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_violet_rpc_EnterBattleFieldPush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_violet_rpc_EnterBattleFieldPush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_violet_rpc_PlayerStateChangePush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_violet_rpc_PlayerStateChangePush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_violet_rpc_GameStateChangePush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_violet_rpc_GameStateChangePush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_violet_rpc_ChessMovePush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_violet_rpc_ChessMovePush_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_violet_rpc_ChatMessagePush_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_violet_rpc_ChatMessagePush_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nPush.proto\022\016com.violet.rpc\032\014Struct.pro" +
      "to\"E\n\023RoomStateChangePush\022.\n\nplayerList\030" +
      "\001 \003(\0132\032.com.violet.rpc.PlayerInfo\"\233\001\n\024En" +
      "terBattleFieldPush\022.\n\nplayerList\030\001 \003(\0132\032" +
      ".com.violet.rpc.PlayerInfo\022\022\n\nroundOrder" +
      "\030\002 \001(\005\022/\n\014chessSetting\030\003 \003(\0132\031.com.viole" +
      "t.rpc.ChessData\022\016\n\006roomId\030\004 \001(\t\"G\n\025Playe" +
      "rStateChangePush\022.\n\nplayerInfo\030\001 \001(\0132\032.c" +
      "om.violet.rpc.PlayerInfo\"r\n\023GameStateCha" +
      "ngePush\022\r\n\005state\030\001 \001(\005\022\016\n\006result\030\002 \001(\005\022+",
      "\n\010chessMap\030\003 \003(\0132\031.com.violet.rpc.ChessD" +
      "ata\022\017\n\007counter\030\004 \001(\005\"\275\001\n\rChessMovePush\022)" +
      "\n\006source\030\001 \001(\0132\031.com.violet.rpc.ChessDat" +
      "a\022)\n\006target\030\002 \001(\0132\031.com.violet.rpc.Chess" +
      "Data\022\027\n\017chessMoveResult\030\003 \001(\005\022\017\n\007counter" +
      "\030\004 \001(\005\022,\n\010operator\030\005 \001(\0132\032.com.violet.rp" +
      "c.PlayerInfo\"N\n\017ChatMessagePush\022\021\n\tfromW" +
      "here\030\001 \001(\005\022(\n\003msg\030\002 \001(\0132\033.com.violet.rpc" +
      ".MessageDatab\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.violet.rpc.Struct.getDescriptor(),
        }, assigner);
    internal_static_com_violet_rpc_RoomStateChangePush_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_violet_rpc_RoomStateChangePush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_violet_rpc_RoomStateChangePush_descriptor,
        new java.lang.String[] { "PlayerList", });
    internal_static_com_violet_rpc_EnterBattleFieldPush_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_violet_rpc_EnterBattleFieldPush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_violet_rpc_EnterBattleFieldPush_descriptor,
        new java.lang.String[] { "PlayerList", "RoundOrder", "ChessSetting", "RoomId", });
    internal_static_com_violet_rpc_PlayerStateChangePush_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_violet_rpc_PlayerStateChangePush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_violet_rpc_PlayerStateChangePush_descriptor,
        new java.lang.String[] { "PlayerInfo", });
    internal_static_com_violet_rpc_GameStateChangePush_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_violet_rpc_GameStateChangePush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_violet_rpc_GameStateChangePush_descriptor,
        new java.lang.String[] { "State", "Result", "ChessMap", "Counter", });
    internal_static_com_violet_rpc_ChessMovePush_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_violet_rpc_ChessMovePush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_violet_rpc_ChessMovePush_descriptor,
        new java.lang.String[] { "Source", "Target", "ChessMoveResult", "Counter", "Operator", });
    internal_static_com_violet_rpc_ChatMessagePush_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_violet_rpc_ChatMessagePush_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_violet_rpc_ChatMessagePush_descriptor,
        new java.lang.String[] { "FromWhere", "Msg", });
    com.violet.rpc.Struct.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
