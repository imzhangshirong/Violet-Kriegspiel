syntax = "proto3";
package com.violet.rpc;

import "Struct.proto";

message LoginRequest{
  string userName = 1;
  string password = 2;//这里考虑加密
  int32 zoneId = 3;//未之后准备
}

message LoginResponse{
  PlayerInfo playerInfo = 1;
  int64 serverTime = 2;//同步服务器时间
}


message LogoutRequest{

}

message LogoutResponse{
  bool isLogout = 1;
}

message FindEnemyRequest{//寻找一场匹配

}

message FindEnemyResponse{
  bool joinGameField = 1;//是否开始匹配
}

message CancelFindEnemyRequest{//取消寻找匹配

}

message CancelFindEnemyResponse{
  bool isCancel = 1;//是否已经结束匹配
}

message GetRoomListRequest{//获取房间列表，todo
  int32 zoneId = 1;//用户自己的zoneId
}

message GetRoomListResponse{
  repeated RoomData roomList = 1;
}

message EnterRoomRequest{// todo
  int32 roomId = 1;
  string password = 2;
}

message EnterRoomResponse{
  repeated PlayerInfo playerList = 1;
}

message ReadyInRoomRequest{
  bool isReady = 1;
  repeated ChessData chessMap = 2;
  string roomId = 3;
}

message ReadyInRoomResponse{
  bool isChangeState = 1;//是否成功更改准备状态
}

message LeaveRoomRequest{
  string roomId = 1;
}

message LeaveRoomResponse{
  bool isLeave = 1;
}


message MoveChessRequest{//走子请求
  ChessData source = 1;
  ChessData target = 2;
}

message MoveChessResponse{
  ChessData source = 1;
  ChessData target = 2;
  int32 chessMoveResult = 3; //enum ChessMoveResult
  int32 counter = 4;//计数器
}

message BattleMapRequest{//请求整个棋盘的数据

}

message BattleMapResponse{
  repeated ChessData chessMap = 1; //棋子布局数据
  repeated PlayerInfo playerList = 2;
  int32 counter = 3; //计数器
}


message CheckGameStateRequest{//检测是否在游戏房间内

}

message CheckGameStateResponse{
  string roomId = 1;//用于断线重连直接进入房间
}

message EnterBattleFieldRequest{//通过房间Token进入指定房间
  string roomId = 1;
}

message EnterBattleFieldResponse{
  repeated ChessData chessMap = 1; //棋子布局数据
  repeated PlayerInfo playerList = 2;
  int32 counter = 3; //计数器
}

message SurrenderRequest{

}

message SurrenderResponse{
  bool isSurrender = 1;
}

message SendChatMessageRequest{
  int32 toWhere = 1;
  MessageData msg = 2;
}

message SendChatMessageResponse{

}

message GetHistoryStepsRequest{
  string roomId = 1;
}

message GetHistoryStepsResponse{
  repeated HistoryStep steps = 1;
}